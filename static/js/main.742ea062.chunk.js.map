{"version":3,"sources":["data.ts","redux/gameReducer.ts","components/Question.tsx","components/LeafletMap.tsx","components/GamePage.tsx","components/StartPage.tsx","components/RecordsPage.tsx","App.tsx","reportWebVitals.ts","redux/mapReducer.ts","redux/redux-store.ts","index.tsx"],"names":["countryCapitalList","name","capital","x","y","countryCapitalListAll","Europe","slice","push","initialState","displayList","countrySet","countryNumber","displayCountry","score","lastRecord","Number","localStorage","getItem","records","JSON","parse","String","isGameStart","shuffle","array","i","length","j","Math","floor","random","setGameOver","type","Question","props","dispatch","useDispatch","useState","isChecked","setIsChecked","userAnswer","setUserAnswer","right","setRight","useSelector","state","game","onCheckClick","toLowerCase","country","setTimeout","style","height","onClick","nextCountryNumber","getCountry","Modal","info","title","content","icon","EnvironmentOutlined","onOk","autoFocus","RightOutlined","width","value","onChange","e","currentTarget","onPressEnter","to","PATH","START","LeafletMap","MapContainer","center","zoom","scrollWheelZoom","TileLayer","url","Marker","position","MapConsumer","map","flyTo","GamePage","StartPage","radioCountryValue","setRadioCountryValue","numberOfQuestions","setNumberOfQuestions","maxNumberOfQuestions","GAME","Group","target","min","max","runNewGame","RecordsPage","r","count","format","date","RECORDS","App","justify","span","textAlign","path","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mapCenterY","mapCenterX","baseUrl","rootReducer","combineReducers","action","newMapCenterX","newMapCenterY","newUrl","newDisplayCountry","shuffleArray","console","log","splice","setItem","toString","newRecordsArr","Date","now","stringify","store","createStore","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.742ea062.chunk.js","sourcesContent":["export const countryCapitalList = {\r\n    'Europe': [\r\n        {name: 'Австрии', capital: 'Вена', x: 48.206481, y: 16.363451},\r\n        {name: 'Албании', capital: 'Тирана', x: 41.330587, y: 19.820366},\r\n        {name: 'Андорры', capital: 'Андорра-ла-Велья', x: 42.506260, y: 1.521692},\r\n        {name: 'Белоруссии', capital: 'Минск', x: 53.902284, y: 27.561831},\r\n        {name: 'Бельгии', capital: 'Брюссель', x: 50.854283, y: 4.352131},\r\n        {name: 'Болгарии', capital: 'София', x: 42.697833, y: 23.314498},\r\n        {name: 'Боснии и Герцеговины', capital: 'Сараево', x: 43.851241, y: 18.360972},\r\n        {name: 'Ватикана', capital: 'Ватикан', x: 41.902185, y: 12.455707},\r\n        {name: 'Венгрии', capital: 'Будапешт', x: 47.492647, y: 19.051399},\r\n        {name: 'Великобритании', capital: 'Лондон', x: 51.507351, y: -0.127660},\r\n        {name: 'Германии', capital: 'Берлин', x: 52.518654, y: 13.374711},\r\n        {name: 'Греции', capital: 'Афины', x: 37.975527, y: 23.734855},\r\n        {name: 'Дании', capital: 'Копенгаген', x: 55.680661, y: 12.585828},\r\n        {name: 'Ирландии', capital: 'Дублин', x: 53.340258, y: -6.252831},\r\n        {name: 'Исландии', capital: 'Рейкьявик', x: 64.137123, y: -21.872396},\r\n        {name: 'Испании', capital: 'Мадрид', x: 40.419348, y: -3.700897},\r\n        {name: 'Италии', capital: 'Рим', x: 41.902689, y: 12.496176},\r\n        {name: 'Латвии', capital: 'Рига', x: 56.946840, y: 24.106075},\r\n        {name: 'Литвы', capital: 'Вильнюс', x: 54.689383, y: 25.270894},\r\n        {name: 'Лихтенштейна', capital: 'Вадуц', x: 47.141049, y: 9.520884},\r\n        {name: 'Люксембурга', capital: 'Люксембург', x: 49.610924, y: 6.123986},\r\n        {name: 'Македонии', capital: 'Скопье', x: 41.995902, y: 21.431449},\r\n        {name: 'Мальты', capital: 'Валлетта', x: 35.898047, y: 14.513137},\r\n        {name: 'Молдавии', capital: 'Кишинев', x: 47.024512, y: 28.832157},\r\n        {name: 'Монако', capital: 'Монако', x: 43.731082, y: 7.422788},\r\n        {name: 'Нидерландов', capital: 'Амстердам', x: 52.373057, y: 4.892557},\r\n        {name: 'Норвегии', capital: 'Осло', x: 59.912752, y: 10.734365},\r\n        {name: 'Польши', capital: 'Варшава', x: 52.232090, y: 21.007139},\r\n        {name: 'Португалии', capital: 'Лиссабон', x: 38.716174, y: -9.141589},\r\n        {name: 'России', capital: 'Москва', x: 55.755814, y: 37.617635},\r\n        {name: 'Румынии', capital: 'Бухарест', x: 44.428089, y: 26.102437},\r\n        {name: 'Сан-Марино', capital: 'Сан-Марино', x: 43.932420, y: 12.448754},\r\n        {name: 'Сербии', capital: 'Белград', x: 44.816232, y: 20.460460},\r\n        {name: 'Словакии', capital: 'Братислава', x: 48.143488, y: 17.108361},\r\n        {name: 'Словении', capital: 'Любляна', x: 46.058357, y: 14.520009},\r\n        {name: 'Украины', capital: 'Киев', x: 50.450441, y: 30.523550},\r\n        {name: 'Финляндии', capital: 'Хельсинки', x: 60.166892, y: 24.943673},\r\n        {name: 'Франции', capital: 'Париж', x: 48.856663, y: 2.351556},\r\n        {name: 'Черногории', capital: 'Подгорица', x: 42.436491, y: 19.252702},\r\n        {name: 'Чехии', capital: 'Прага', x: 50.080293, y: 14.428983},\r\n        {name: 'Хорватии', capital: 'Загреб', x: 45.808594, y: 15.978577},\r\n        {name: 'Швейцарии', capital: 'Берн', x: 46.947978, y: 7.440386},\r\n        {name: 'Швеции', capital: 'Стокгольм', x: 59.325000, y: 18.070897},\r\n        {name: 'Эстонии', capital: 'Таллинн', x: 59.421937, y: 24.743349},\r\n    ],\r\n    'Asia': [\r\n        {name: 'Азербайджана', capital: 'Баку', x: 40.372967, y: 49.853139},\r\n        {name: 'Армении', capital: 'Ереван', x: 40.177628, y: 44.512546},\r\n        {name: 'Афганистана', capital: 'Кабул', x: 34.520230, y: 69.179961},\r\n        {name: 'Бангладеша', capital: 'Дакка', x: 23.764177, y: 90.378441},\r\n        {name: 'Бахрейна', capital: 'Манама', x: 26.222815, y: 50.587439},\r\n        {name: 'Брунея', capital: 'Бандар-Сери-Бегаван', x: 4.929522, y: 114.918510},\r\n        {name: 'Бутана', capital: 'Тхимпху', x: 27.497963, y: 89.634914},\r\n        {name: 'Восточного Тимора', capital: 'Дили', x: -8.558740, y: 125.564022},\r\n        {name: 'Вьетнама', capital: 'Ханой', x: 21.033995, y: 105.842112},\r\n        {name: 'Грузии', capital: 'Тбилиси', x: 41.693076, y: 44.801552},\r\n        {name: 'Израиля', capital: 'Иерусалим', x: 31.777493, y: 35.205165},\r\n        {name: 'Индии', capital: 'Нью-Дели', x: 28.632846, y: 77.219721},\r\n        {name: 'Индонезии', capital: 'Джакарта', x: -6.175391, y: 106.826252},\r\n        {name: 'Иордании', capital: 'Амман', x: 31.955397, y: 35.895673},\r\n        {name: 'Ирака', capital: 'Багдад', x: 33.315250, y: 44.366031},\r\n        {name: 'Ирана', capital: 'Тегеран', x: 35.699706, y: 51.337425},\r\n        {name: 'Йемена', capital: 'Сана', x: 15.370526, y: 44.180475},\r\n        {name: 'Казахстана', capital: 'Нур-Султан', x: 51.128207, y: 71.430411},\r\n        {name: 'Камбоджи', capital: 'Пномпень', x: 11.552889, y: 104.865913},\r\n        {name: 'Катара', capital: 'Доха', x: 25.293610, y: 51.519181},\r\n        {name: 'Кипра', capital: 'Никосия', x: 35.172867, y: 33.354168},\r\n        {name: 'Киргизии', capital: 'Бишкек', x: 42.878645, y: 74.616197},\r\n        {name: 'Китая', capital: 'Пекин', x: 39.901843, y: 116.391433},\r\n        {name: 'Северной Кореи', capital: 'Пхеньян', x: 39.019370, y: 125.754258},\r\n        {name: 'Южной Кореи', capital: 'Сеул', x: 37.570705, y: 126.976937},\r\n        {name: 'Кувейта', capital: 'Эль-Кувейт', x: 29.376497, y: 47.983843},\r\n        {name: 'Лаоса', capital: 'Вьентьян', x: 17.970881, y: 102.618930},\r\n        {name: 'Ливана', capital: 'Бейрут', x: 33.890641, y: 35.484487},\r\n        {name: 'Малайзии', capital: 'Куала-Лумпур', x: 3.140285, y: 101.706691},\r\n        {name: 'Мальдив', capital: 'Мале', x: 4.174972, y: 73.509688},\r\n        {name: 'Монголии', capital: 'Улан-Батор', x: 47.918615, y: 106.917647},\r\n        {name: 'Мьянмы', capital: 'Нейпьидо', x: 19.750668, y: 96.087118},\r\n        {name: 'Непала', capital: 'Катманду', x: 27.703184, y: 85.315051},\r\n        {name: 'ОАЭ', capital: 'Абу-Даби', x: 24.485832, y: 54.356555},\r\n        {name: 'Омана', capital: 'Маскат', x: 23.615252, y: 58.594546},\r\n        {name: 'Пакистана', capital: 'Исламабад', x: 33.729899, y: 73.094307},\r\n        {name: 'Саудовской Аравии', capital: 'Эр-Рияд', x: 24.665542, y: 46.735886},\r\n        {name: 'Сингапура', capital: 'Сингапур', x: 1.292703, y: 103.846954},\r\n        {name: 'Сирии', capital: 'Дамаск', x: 33.524142, y: 36.318537},\r\n        {name: 'Таджикистана', capital: 'Душанбе', x: 38.576271, y: 68.779716},\r\n        {name: 'Таиланда', capital: 'Бангкок', x: 13.771370, y: 100.513782},\r\n        {name: 'Туркмении', capital: 'Ашхабад', x: 37.935183, y: 58.378977},\r\n        {name: 'Турции', capital: 'Анкаpа', x: 39.920756, y: 32.854049},\r\n        {name: 'Узбекистана', capital: 'Ташкент', x: 41.311151, y: 69.279737},\r\n        {name: 'Филиппин', capital: 'Манила', x: 14.596116, y: 120.984195},\r\n        {name: 'Шри-Ланки', capital: 'Коломбо', x: 6.937505, y: 79.856869},\r\n        {name: 'Японии', capital: 'Токио', x: 35.681700, y: 139.753882}\r\n    ],\r\n    'Africa': [\r\n        {name: 'Алжира', capital: 'Алжир', x: 36.772200, y: 3.059815},\r\n        {name: 'Анголы', capital: 'Луанда', x: -8.814776, y: 13.233064},\r\n        {name: 'Бенина', capital: 'Порто-Ново', x: 6.475173, y: 2.632190},\r\n        {name: 'Ботсваны', capital: 'Габороне', x: -24.658367, y: 25.912138},\r\n        {name: 'Буркина-Фасо', capital: 'Уагадугу', x: 12.368197, y: -1.529229},\r\n        {name: 'Бурунди', capital: 'Бужумбура', x: -3.377924, y: 29.355416},\r\n        {name: 'Габона', capital: 'Либревиль', x: 0.411439, y: 9.516770},\r\n        {name: 'Гамбии', capital: 'Банжул', x: 13.453373, y: -16.574465},\r\n        {name: 'Ганы', capital: 'Аккра', x: 5.548712, y: -0.192805},\r\n        {name: 'Гвинеи', capital: 'Конакри', x: 9.628353, y: -13.588564},\r\n        {name: 'Гвинеи-Бисау', capital: 'Бисау', x: 11.873550, y: -15.608345},\r\n        {name: 'Джибути', capital: 'Джибути', x: 11.574183, y: 43.145257},\r\n        {name: 'Египта', capital: 'Каир', x: 30.050747, y: 31.246900},\r\n        {name: 'Замбии', capital: 'Лусака', x: -15.395740, y: 28.330061},\r\n        {name: 'Зимбабве', capital: 'Хараре', x: -17.829291, y: 31.051993},\r\n        {name: 'Кабо-Верде', capital: 'Прая', x: 14.915518, y: -23.513654},\r\n        {name: 'Камеруна', capital: 'Яунде', x: 3.814756, y: 11.531260},\r\n        {name: 'Кении', capital: 'Найроби', x: -1.272758, y: 36.827899},\r\n        {name: 'Коморских островов', capital: 'Морони', x: -11.727391, y: 43.238996},\r\n        {name: 'Республики Конго', capital: 'Браззавиль', x: -4.279328, y: 15.272752},\r\n        {name: 'Демократической Республики Конго', capital: 'Киншаса', x: -4.301458, y: 15.316689},\r\n        {name: \"Кот-д'Ивуара\", capital: 'Ямусукро', x: 6.809741, y: -5.250608},\r\n        {name: 'Лесото', capital: 'Масеру', x: -29.316469, y: 27.493685},\r\n        {name: 'Либерии', capital: 'Монровия', x: 6.336449, y: -10.738048},\r\n        {name: 'Ливии', capital: 'Триполи', x: 32.880965, y: 13.155486},\r\n        {name: 'Маврикия', capital: 'Порт-Луи', x: -20.165111, y: 57.499266},\r\n        {name: 'Мавритании', capital: 'Нуакшот', x: 18.087752, y: -15.977723},\r\n        {name: 'Мадагаскара', capital: 'Антананариву', x: -18.909565, y: 47.525379},\r\n        {name: 'Малави', capital: 'Лилонгве', x: -13.956719, y: 33.749822},\r\n        {name: 'Мали', capital: 'Бамако', x: 12.626755, y: -8.009370},\r\n        {name: 'Марокко', capital: 'Рабат', x: 34.008595, y: -6.854146},\r\n        {name: 'Мозамбика', capital: 'Мапуту', x: -25.893261, y: 32.619885},\r\n        {name: 'Намибии', capital: 'Виндхук', x: -22.567361, y: 17.087421},\r\n        {name: 'Нигера', capital: 'Ниамей', x: 13.524484, y: 2.108651},\r\n        {name: 'Нигерии', capital: 'Абуджа', x: 9.067303, y: 7.509853},\r\n        {name: 'Руанды', capital: 'Кигали', x: -1.955124, y: 30.086025},\r\n        {name: 'Сан-Томе и Принсипи', capital: 'Сан-Томе', x: 0.323139, y: 6.731705},\r\n        {name: 'Сейшельских островов', capital: 'Виктория', x: -4.641524, y: 55.460719},\r\n        {name: 'Сенегала', capital: 'Дакар', x: 14.781295, y: -17.282697},\r\n        {name: 'Сомали', capital: 'Могадишо', x: 2.039053, y: 45.342042},\r\n        {name: 'Судана', capital: 'Хаpтум', x: 15.587294, y: 32.527637},\r\n        {name: 'Сьерра-Леоне', capital: 'Фpитаун', x: 8.430298, y: -13.178088},\r\n        {name: 'Танзании', capital: 'Додома', x: -6.179050, y: 35.748771},\r\n        {name: 'Того', capital: 'Ломе', x: 6.127595, y: 1.219319},\r\n        {name: 'Туниса', capital: 'Тунис', x: 36.819716, y: 10.188863},\r\n        {name: 'Уганды', capital: 'Кампала', x: 0.315388, y: 32.579164},\r\n        {name: 'Центральноафриканской Республики', capital: 'Банги', x: 4.393047, y: 18.548818},\r\n        {name: 'Чада', capital: 'Нджамена', x: 12.127376, y: 15.077926},\r\n        {name: 'Экваториальной Гвинеи', capital: 'Малабо', x: 3.731845, y: 8.755385},\r\n        {name: 'Эритреи', capital: 'Асмэра', x: 15.330210, y: 38.932481},\r\n        {name: 'Эсватини', capital: 'Мбабане', x: -26.326542, y: 31.144187},\r\n        {name: 'Эфиопии', capital: 'Аддис-Абеба', x: 9.035264, y: 38.751606},\r\n        {name: 'ЮАР', capital: 'Претория', x: -25.746440, y: 28.187957},\r\n        {name: 'Южного Судана', capital: 'Джуба', x: 4.848978, y: 31.583130}\r\n    ],\r\n    'Australia and Oceania': [\r\n        {name: 'Австралии', capital: 'Канберра', x: -35.306904, y: 149.125529},\r\n        {name: 'Вануату', capital: 'Порт-Вила', x: -17.730413, y: 168.319760},\r\n        {name: 'Кирибати', capital: 'Тарава', x: 1.337991, y: 173.032475},\r\n        {name: 'Маршалловых островов', capital: 'Маджуро', x: 7.076047, y: 171.326511},\r\n        {name: 'Микронезии', capital: 'Паликир', x: 6.919371, y: 158.155592},\r\n        {name: 'Науру', capital: 'Ярен', x: -0.539376, y: 166.912756},\r\n        {name: 'Новой Зеландии', capital: 'Веллингтон', x: -41.298578, y: 174.777336},\r\n        {name: 'Палау', capital: 'Корор', x: 7.340268, y: 134.482568},\r\n        {name: 'Папуа-Новой Гвинеи', capital: 'Порт-Морсби', x: -9.436821, y: 147.193334},\r\n        {name: 'Самоа', capital: 'Апиа', x: -13.831543, y: -171.768932},\r\n        {name: 'Соломоновых островов', capital: 'Хониаpа', x: -9.438266, y: 159.961808},\r\n        {name: 'Тонга', capital: 'Нукуалофа', x: -21.136345, y: -175.206218},\r\n        {name: 'Тувалу', capital: 'Фунафути', x: -8.520423, y: 179.199337},\r\n        {name: 'Фиджи', capital: 'Сува', x: -18.105724, y: 178.465746}\r\n    ],\r\n    'North America': [\r\n        {name: 'Антигуа и Барбуда', capital: 'Сент-Джонс', x: 17.126792, y: -61.842683},\r\n        {name: 'Багамских островов', capital: 'Нассау', x: 25.046813, y: -77.323494},\r\n        {name: 'Барбадоса', capital: 'Бриджтаун', x: 13.097396, y: -59.606282},\r\n        {name: 'Белиза', capital: 'Бельмопан', x: 17.247869, y: -88.768040},\r\n        {name: 'Гаити', capital: 'Порт-о-Пренс', x: 18.545758, y: -72.344142},\r\n        {name: 'Гватемалы', capital: 'Гватемала', x: 14.581690, y: -90.529690},\r\n        {name: 'Гондураса', capital: 'Тегусигальпа', x: 14.079863, y: -87.216766},\r\n        {name: 'Гренады', capital: 'Сент-Джорджес', x: 12.053797, y: -61.751486},\r\n        {name: 'Доминики', capital: 'Розо', x: 15.322416, y: -61.367717},\r\n        {name: 'Доминиканской Республики', capital: 'Санто-Доминго', x: 18.479041, y: -69.919786},\r\n        {name: 'Канады', capital: 'Оттава', x: 45.401833, y: -75.699511},\r\n        {name: 'Коста-Рики', capital: 'Сан-Хосе', x: 9.934776, y: -84.084538},\r\n        {name: 'Кубы', capital: 'Гавана', x: 23.124290, y: -82.385824},\r\n        {name: 'Мексики', capital: 'Мехико', x: 19.432605, y: -99.133296},\r\n        {name: 'Никарагуа', capital: 'Манагуа', x: 12.144833, y: -86.270292},\r\n        {name: 'Панамы', capital: 'Панама', x: 9.020341, y: -79.516345},\r\n        {name: 'Сальвадора', capital: 'Сан-Сальвадор', x: 13.702715, y: -89.219614},\r\n        {name: 'Сент-Винсент и Гренадинов', capital: 'Кингстаун', x: 13.157204, y: -61.226771},\r\n        {name: 'Сент-Кристофер и Невиса', capital: 'Бастер', x: 17.295295, y: -62.726284},\r\n        {name: 'Сент-Люсии', capital: 'Кастри', x: 14.009897, y: -60.988385},\r\n        {name: 'США', capital: 'Вашингтон', x: 38.899513, y: -77.036527},\r\n        {name: 'Тринидада и Тобаго', capital: 'Порт-оф-Спейн', x: 10.655398, y: -61.483384},\r\n        {name: 'Ямайки', capital: 'Кингстон', x: 17.993515, y: -76.803199}\r\n    ],\r\n    'South America': [\r\n        {name: 'Аргентины', capital: 'Буэнос-Айрес', x: -34.615689, y: -58.435104},\r\n        {name: 'Боливии', capital: 'Ла-Пас', x: -16.485969, y: -68.165933},\r\n        {name: 'Бразилии', capital: 'Бразилиа', x: -15.802118, y: -47.889062},\r\n        {name: 'Венесуэлы', capital: 'Каракас', x: 10.503556, y: -66.919503},\r\n        {name: 'Гайаны', capital: 'Джорджтаун', x: 6.807173, y: -58.120846},\r\n        {name: 'Колумбии', capital: 'Богота', x: 4.660678, y: -74.090700},\r\n        {name: 'Парагвая', capital: 'Асунсьон', x: -25.298249, y: -57.622533},\r\n        {name: 'Перу', capital: 'Лима', x: -12.046016, y: -77.030554},\r\n        {name: 'Суринама', capital: 'Паpамаpибо', x: 5.823395, y: -55.175782},\r\n        {name: 'Уругвая', capital: 'Монтевидео', x: -34.859361, y: -56.197841},\r\n        {name: 'Чили', capital: 'Сантьяго', x: -33.477669, y: -70.642364},\r\n        {name: 'Эквадора', capital: 'Кито', x: -33.441964, y: -70.640909}\r\n    ]\r\n}\r\nexport const countryCapitalListAll = countryCapitalList.Europe.slice()\r\ncountryCapitalListAll.push(...countryCapitalList['Asia'], ...countryCapitalList['Africa'],\r\n    ...countryCapitalList['Australia and Oceania'],\r\n    ...countryCapitalList['North America'], ...countryCapitalList['South America'])\r\n","import {countryCapitalList, countryCapitalListAll} from '../data';\r\nimport {CountryType} from '../components/Question';\r\nimport {recordType} from '../components/RecordsPage';\r\n\r\ntype initialStateType = typeof initialState\r\nexport type countrySetType =\r\n    'Europe'\r\n    | 'Asia'\r\n    | 'Africa'\r\n    | 'Australia and Oceania'\r\n    | 'North America'\r\n    | 'South America'\r\n    | 'All'\r\n\r\nconst initialState = {\r\n    countryCapitalList: countryCapitalList,\r\n    countryCapitalListAll: countryCapitalListAll,\r\n    displayList: [] as Array<CountryType>,\r\n    countrySet: 'Europe',\r\n    countryNumber: 0,\r\n    displayCountry: {} as CountryType,\r\n    score: 0,\r\n    lastRecord: Number(localStorage.getItem('record')) | 0,\r\n    records: JSON.parse(String(localStorage.getItem('records'))) || [] as Array<recordType>,\r\n    isGameStart: false\r\n}\r\n\r\n\r\ntype ActionTypes = GetCountryType | RunNewGameType | IncreaseScoreType | SetGameOverType\r\n\r\n//Тасование Фишера — Йетса\r\nfunction shuffle(array: any) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n}\r\n\r\n\r\nexport const gameReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case 'GET_COUNTRY': {\r\n            let newDisplayCountry = {...state}.displayList[action.nextCountryNumber]\r\n            return {...state, countryNumber: action.nextCountryNumber, displayCountry: newDisplayCountry}\r\n        }\r\n        case 'RUN_NEW_GAME': {\r\n            let shuffleArray = [] as Array<CountryType>\r\n            if (action.countrySet === 'All') {\r\n                shuffleArray = state.countryCapitalListAll.slice()\r\n                console.log(shuffleArray)\r\n            } else {\r\n                shuffleArray = state.countryCapitalList[action.countrySet].slice()\r\n                console.log(shuffleArray)\r\n            }\r\n            shuffle(shuffleArray)\r\n            shuffleArray.splice(action.numberOfQuestions)\r\n            console.log(shuffleArray)\r\n            return {...state, displayList: shuffleArray, displayCountry: shuffleArray[0], isGameStart: true}\r\n        }\r\n        case 'INCREASE_SCORE': {\r\n            return {...state, score: state.score + 1}\r\n        }\r\n        case 'SET_GAME_OVER': {\r\n            localStorage.setItem('record', action.score > state.lastRecord ? action.score.toString() : state.lastRecord.toString())\r\n\r\n            let newRecordsArr = state.records.slice()\r\n            if (action.score > state.lastRecord) {\r\n                newRecordsArr.push({count: action.score, date: Date.now()})\r\n                localStorage.setItem('records', JSON.stringify(newRecordsArr))\r\n            }\r\n\r\n\r\n            return {\r\n                ...state,\r\n                isGameStart: false,\r\n                score: 0,\r\n                countryNumber: 0,\r\n                lastRecord: action.score > state.lastRecord ? action.score : state.lastRecord,\r\n                records: newRecordsArr\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCountry = (countryNumber: number) => ({\r\n    type: 'GET_COUNTRY',\r\n    nextCountryNumber: countryNumber + 1\r\n} as const)\r\n\r\nexport const runNewGame = (countrySet: countrySetType, numberOfQuestions: number) => ({\r\n    type: 'RUN_NEW_GAME',\r\n    countrySet,\r\n    numberOfQuestions\r\n} as const)\r\n\r\nexport const increaseScore = () => ({\r\n    type: 'INCREASE_SCORE'\r\n} as const)\r\n\r\nexport const setGameOver = (score: number) => ({\r\n    type: 'SET_GAME_OVER',\r\n    score\r\n} as const)\r\n\r\n\r\n\r\ntype GetCountryType = ReturnType<typeof getCountry>\r\ntype RunNewGameType = ReturnType<typeof runNewGame>\r\ntype IncreaseScoreType = ReturnType<typeof increaseScore>\r\ntype SetGameOverType = ReturnType<typeof setGameOver>\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport {Button, Input, Modal} from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../redux/redux-store';\r\nimport {getCountry, increaseScore, setGameOver} from '../redux/gameReducer';\r\nimport {EnvironmentOutlined, RightOutlined} from '@ant-design/icons';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../App';\r\n\r\nexport type CountryType = {\r\n    name: string,\r\n    capital: string,\r\n    x: number,\r\n    y: number\r\n}\r\n\r\ntype QuestionPropsType = {\r\n    country: CountryType\r\n    displayList: Array<CountryType>\r\n    lastRecord: number\r\n    isGameStart: boolean\r\n}\r\n\r\nexport const Question = (props: QuestionPropsType) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [userAnswer, setUserAnswer] = useState<string>('');\r\n    const [right, setRight] = useState<boolean>(false);\r\n\r\n    let countryNumber = useSelector<AppRootStateType, number>(state => state.game.countryNumber)\r\n    let score = useSelector<AppRootStateType, number>(state => state.game.score)\r\n\r\n\r\n    const onCheckClick = () => {\r\n        if (userAnswer.toLowerCase() === props.country.capital.toLowerCase()) {\r\n            setRight(true)\r\n            dispatch(increaseScore())\r\n        } else {\r\n            setRight(false)\r\n        }\r\n        setTimeout(setIsChecked, 10, true)\r\n    }\r\n\r\n    function gameOver() {\r\n        Modal.info({\r\n            title: 'Вопросов больше нет!',\r\n            content: (\r\n                <div>\r\n                    <p>Правильных ответов: {score}</p>\r\n                    <p>Рекорд: {props.lastRecord > score ? props.lastRecord : score}</p>\r\n                </div>\r\n            ),\r\n            icon: <EnvironmentOutlined  />,\r\n            onOk() {\r\n                dispatch(setGameOver(score))\r\n            },\r\n        })\r\n    }\r\n    function gameFinish() {\r\n        Modal.info({\r\n            title: 'Выход из игры',\r\n            content: (\r\n                <div>\r\n                    <p>Правильных ответов: {score}</p>\r\n                    <p>Рекорд: {props.lastRecord > score ? props.lastRecord : score}</p>\r\n                </div>\r\n            ),\r\n            icon: <EnvironmentOutlined />,\r\n            onOk() {\r\n                dispatch(setGameOver(score))\r\n            },\r\n        })\r\n    }\r\n\r\n    const onNextClick = () => {\r\n\r\n        if(countryNumber + 1 < props.displayList.length) {\r\n            dispatch(getCountry(countryNumber))\r\n            setUserAnswer('')\r\n        } else {\r\n            gameOver()\r\n        }\r\n        setIsChecked(false)\r\n    }\r\n\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setUserAnswer(e.currentTarget.value)\r\n    }\r\n\r\n    if(!props.isGameStart) {\r\n        return <Redirect to={PATH.START}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Счет: {score}\r\n            </div>\r\n\r\n            {!isChecked ?\r\n                <div>\r\n                    <div>\r\n                        Столица {props.country.name}?\r\n                    </div>\r\n                    <Input style={{width: '200px'}} autoFocus={true}\r\n                           value={userAnswer} onChange={onInputChange} onPressEnter={onCheckClick}></Input>\r\n                    <Button onClick={onCheckClick}>Проверить</Button>\r\n                </div>\r\n                : <div style={{height: '50px'}}>\r\n                    {right ? 'Правильно!' : 'Неверно!'} Ответ: {props.country.capital}\r\n                    <Button onClick={onNextClick} autoFocus={true}><RightOutlined /></Button>\r\n                </div>\r\n            }\r\n            <div>\r\n                <Button onClick={gameFinish}>Завершить</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useRef} from 'react';\r\nimport {MapContainer, TileLayer, Marker, useMapEvent, useMap, MapConsumer} from 'react-leaflet'\r\nimport {CountryType} from './Question';\r\n\r\n\r\ntype LeafletMapPropsType = {\r\n    country: CountryType\r\n}\r\n\r\nexport const LeafletMap = (props: LeafletMapPropsType) => {\r\n\r\n    return (\r\n        <MapContainer style={{height: '500px'}} center={[48.206481, 16.363451]} zoom={4} scrollWheelZoom={false}>\r\n            <TileLayer\r\n                // attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://map1.vis.earthdata.nasa.gov/wmts-webmerc/VIIRS_CityLights_2012/default//GoogleMapsCompatible_Level8/{z}/{y}/{x}.jpg\"\r\n            />\r\n            <Marker position={[props.country.x, props.country.y]}>\r\n            </Marker>\r\n            <MapConsumer>\r\n                {(map) => {\r\n                    map.flyTo([props.country.x, props.country.y], 4)\r\n                    return null\r\n                }}\r\n            </MapConsumer>\r\n        </MapContainer>\r\n    )\r\n}","import React from 'react'\r\nimport {CountryType, Question} from './Question';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../redux/redux-store';\r\nimport {LeafletMap} from './LeafletMap';\r\n\r\ntype GamePageType = {\r\n    lastRecord: number\r\n    isGameStart: boolean\r\n}\r\n\r\nexport const GamePage = (props: GamePageType) => {\r\n\r\n    let displayCountry = useSelector<AppRootStateType, CountryType>(state => state.game.displayCountry)\r\n    let displayList = useSelector<AppRootStateType, Array<CountryType>>(state => state.game.displayList)\r\n\r\n    return (\r\n        <div>\r\n            <Question country={displayCountry} displayList={displayList} lastRecord={props.lastRecord} isGameStart={props.isGameStart}/>\r\n            <LeafletMap country={displayCountry}/>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {Button, InputNumber, Radio, RadioChangeEvent} from 'antd';\r\nimport {countrySetType, runNewGame} from '../redux/gameReducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../App';\r\nimport {AppRootStateType} from '../redux/redux-store';\r\n\r\ntype StartPageType = {\r\n    lastRecord: number\r\n    isGameStart: boolean\r\n}\r\n\r\nexport const StartPage = (props: StartPageType) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [radioCountryValue, setRadioCountryValue] = useState<countrySetType>('Europe');\r\n    const [numberOfQuestions, setNumberOfQuestions] = useState<number>(5);\r\n\r\n    const onRegionChange = (e: RadioChangeEvent) => {\r\n        setRadioCountryValue(e.target.value);\r\n    };\r\n\r\n    const onNumberOfQuestionChange = (value: string | number | null | undefined) => {\r\n        setNumberOfQuestions(Number(value))\r\n    }\r\n\r\n    const onStartClick = () => {\r\n        dispatch(runNewGame(radioCountryValue, numberOfQuestions))\r\n    }\r\n\r\n    let maxNumberOfQuestions = 0\r\n\r\n    switch(radioCountryValue) {\r\n        case 'Europe':\r\n            maxNumberOfQuestions = 44\r\n            break\r\n        case 'Asia':\r\n            maxNumberOfQuestions = 47\r\n            break\r\n        case 'Africa':\r\n            maxNumberOfQuestions = 54\r\n            break\r\n        case 'Australia and Oceania':\r\n            maxNumberOfQuestions = 14\r\n            break\r\n        case 'North America':\r\n            maxNumberOfQuestions = 23\r\n            break\r\n        case 'South America':\r\n            maxNumberOfQuestions = 12\r\n            break\r\n        case 'All':\r\n            maxNumberOfQuestions = 194\r\n            break\r\n    }\r\n\r\n    if(props.isGameStart) {\r\n        return <Redirect to={PATH.GAME}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2>Выберите регион</h2>\r\n                <Radio.Group onChange={onRegionChange} value={radioCountryValue}>\r\n                    <Radio value='Europe'>Европа</Radio>\r\n                    <Radio value='Asia'>Азия</Radio>\r\n                    <Radio value='Africa'>Африка</Radio>\r\n                    <Radio value='Australia and Oceania'>Австралия и Океания</Radio>\r\n                    <Radio value='North America'>Северная Америка</Radio>\r\n                    <Radio value='South America'>Южная Америка</Radio>\r\n                    <Radio value='All'>Весь мир</Radio>\r\n                </Radio.Group>\r\n                <h2>Выберите количество вопросов</h2>\r\n                <InputNumber min={5} max={maxNumberOfQuestions} value={numberOfQuestions} onChange={onNumberOfQuestionChange} />\r\n            </div>\r\n            <div>\r\n                <Button onClick={onStartClick}>Старт!</Button>\r\n            </div>\r\n            <div>\r\n                <h2>Рекорд: {props.lastRecord}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../redux/redux-store';\r\nimport {format} from 'date-fns'\r\n\r\nexport type recordType = {\r\n    count: number\r\n    date: number\r\n}\r\n\r\n\r\nexport const RecordsPage = () => {\r\n\r\n    let records = useSelector<AppRootStateType, Array<recordType>>(state => state.game.records)\r\n\r\n    return (\r\n        <div>\r\n            <h2>Рекорды</h2>\r\n            <div>\r\n                {records.map(r => <div key={r.date}>{`${r.count} ${format(r.date, 'HH:mm dd.MM.yyyy')}`}</div>)}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {GamePage} from './components/GamePage';\r\nimport {StartPage} from './components/StartPage';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from './redux/redux-store';\r\nimport {Col, Row} from 'antd';\r\nimport {Redirect, Route, Switch } from 'react-router-dom';\r\nimport {RecordsPage} from './components/RecordsPage';\r\n\r\nexport const PATH = {\r\n    START: \"/start\",\r\n    GAME: '/game',\r\n    RECORDS: \"/records\",\r\n}\r\n\r\nfunction App() {\r\n\r\n    let lastRecord = useSelector<AppRootStateType, number>(state => state.game.lastRecord)\r\n    const isGameStart = useSelector<AppRootStateType, boolean>(state => state.game.isGameStart)\r\n\r\n    return (\r\n        <div>\r\n            <Row justify='center'>\r\n                <Col span={24} style={{textAlign: 'center'}}>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.START}/>}/>\r\n\r\n\r\n                <Route path={PATH.START} render={() => <StartPage lastRecord={lastRecord} isGameStart={isGameStart}/>}/>\r\n                <Route path={PATH.GAME} render={() => <GamePage lastRecord={lastRecord} isGameStart={isGameStart}/>}/>\r\n                <Route path={PATH.RECORDS} render={() => <RecordsPage />}/>\r\n\r\n\r\n                {/*<Route render={() => <Error404/>}/>*/}\r\n            </Switch>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","type initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    mapCenterY: -0.12755,\r\n    mapCenterX: 51.507222,\r\n    baseUrl: ''\r\n}\r\n//'https://stamen-tiles-c.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.jpg'\r\n//'https://map1.vis.earthdata.nasa.gov/wmts-webmerc/VIIRS_CityLights_2012/default//GoogleMapsCompatible_Level8/{z}/{y}/{x}.jpg'\r\n\r\ntype ActionTypes = SetMapCenterType | SetBaseUrlType\r\n\r\nexport const mapReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_MAP_CENTER': {\r\n            return {...state, mapCenterX: action.newMapCenterX, mapCenterY: action.newMapCenterY}\r\n        }\r\n        case 'SET_BASE_URL': {\r\n            return {...state, baseUrl: action.newUrl}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const setMapCenter = (newMapCenterX: number, newMapCenterY: number) => ({\r\n    type: 'SET_MAP_CENTER',\r\n    newMapCenterX,\r\n    newMapCenterY\r\n} as const)\r\n\r\nexport const setBaseUrl = (newUrl: string) => ({\r\n    type: 'SET_BASE_URL',\r\n    newUrl\r\n} as const)\r\n\r\ntype SetMapCenterType = ReturnType<typeof setMapCenter>\r\ntype SetBaseUrlType = ReturnType<typeof setBaseUrl>\r\n\r\n","import {combineReducers, createStore} from 'redux';\r\nimport {mapReducer} from './mapReducer';\r\nimport {gameReducer} from './gameReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    map: mapReducer,\r\n    game: gameReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer)\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.css'\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './redux/redux-store';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}